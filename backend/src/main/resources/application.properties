# Other containers configuration
server.environment.cloud=false


# Uploader module configuration
uploader.templates.path=stored_files/templates


# PostgreSQL configuration
spring.datasource.url=jdbc:postgresql://localhost:5000/anonymisation_db
spring.datasource.username=postgres
spring.datasource.password=postgres


# JPA configuration
spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=false
spring.jpa.show-sql=false


# Security configuration
core.jwt.algorithm=HS512
core.jwt.secretKey=/EOAqvJOzlPxRdTJO5iblCYSCGMXsVaCU47BpvxvO19L87/pVpyoab9sy2rDzHS5vNwHzu8rX/E8FJGqx5oCkA==
core.jwt.accessToken.expireTimeInSeconds=1200
core.jwt.refreshToken.expireTimeInSeconds=2419200
core.api.unprotectedResources=/api/v1/auth/**,\
                              /api/v1/users/register/**,\
                              /api/v1/users/verify-mail/**,\
                              /api/v1/reset-password/**,\
                              /api/v1/me/restore-account/**


# Token based services configuration
core.resetPasswordToken.expireTimeInSeconds=30
core.verifyMailToken.expireTimeInSeconds=30
core.undoRemoveAccountToken.expireTimeInSeconds=30


# Cronjob based services configuration
core.notifyExpiringAccounts.scheduled=false
core.notifyExpiringAccounts.executable=false
core.notifyExpiringAccounts.cron=*/120 * * * * *
core.notifyExpiringAccounts.notifyAfterTimeInSeconds=300
core.notifyExpiringAccounts.description=Send mail notifications to expiring accounts

core.removeInactiveAccounts.scheduled=false
core.removeInactiveAccounts.executable=false
core.removeInactiveAccounts.cron=@weekly
core.removeInactiveAccounts.removeAfterTimeInSeconds=360
core.removeInactiveAccounts.description=Remove inactive accounts

core.removeUnverifiedAccounts.scheduled=false
core.removeUnverifiedAccounts.executable=false
core.removeUnverifiedAccounts.cron=*/180 * * * * *
core.removeUnverifiedAccounts.removeAfterTimeInSeconds=240
core.removeUnverifiedAccounts.description=Remove dangling unverified accounts

core.handleRemoveAccounts.scheduled=false
core.handleRemoveAccounts.executable=false
core.handleRemoveAccounts.cron=*/90 * * * * *
core.handleRemoveAccounts.markedRemoveAfterTimeInSeconds=90
core.handleRemoveAccounts.description=Remove qualified accounts and clean-up their data

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Mail service configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=data.anonymisation
#spring.mail.password=<Specified in secrets.properties>
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

