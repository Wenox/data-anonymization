# Other containers configuration
server.environment.cloud: false


# Uploader module configuration
uploader.templates.path: stored_files/templates
spring.servlet.multipart:
  max-file-size: 10MB
  max-request-size: 10MB

# Processing module configuration
processing:
  anonymisations.scripts.path: stored_files/anonymisations/scripts
  dumps:
    scripts.path: stored_files/dumps/scripts
    archives.path: stored_files/dumps/archives


# PostgreSQL configuration
spring.datasource:
  url: jdbc:postgresql://localhost:5007/anonymisation_db
  username: postgres
  password: postgres


# JPA configuration
spring.jpa:
  hibernate.ddl-auto: create
  generate-ddl: false
  show-sql: false
  properties.hibernate.types.print.banner: false

# Core configuration
core:
  preloader.admin:
    login: admin@admin.com
    password: admin
  jwt:
    algorithm: HS512
    secretKey: /EOAqvJOzlPxRdTJO5iblCYSCGMXsVaCU47BpvxvO19L87/pVpyoab9sy2rDzHS5vNwHzu8rX/E8FJGqx5oCkA==
    accessToken.expireTimeInSeconds: 12000
    refreshToken.expireTimeInSeconds: 2419200
  api:
    unprotectedResources: /api/v1/auth/**,\
                          /api/v1/users/register/**,\
                          /api/v1/users/verify-mail/**,\
                          /api/v1/reset-password/**,\
                          /api/v1/me/restore-account/**

# Token based services configuration
  resetPasswordToken.expireTimeInSeconds: 10
  verifyMailToken.expireTimeInSeconds: 10
  undoRemoveAccountToken.expireTimeInSeconds: 10


# Scheduler module configuration
scheduler:
  notifyExpiringAccounts:
    scheduled: true
    executable: true
    cron: '*/450 * * * * *'
    notifyAfterTimeInSeconds: 300
    description: Send mail notifications to expiring accounts

  removeInactiveAccounts:
    scheduled: true
    executable: false
    cron: '@weekly'
    removeAfterTimeInSeconds: 300
    description: Remove inactive accounts

  removeUnverifiedAccounts:
    scheduled: false
    executable: false
    cron: '*/525 * * * * *'
    removeAfterTimeInSeconds: 300
    description: Remove dangling unverified accounts

  handleRemoveAccounts:
    scheduled: true
    executable: true
    cron: '*/600 * * * * *'
    markedRemoveAfterTimeInSeconds: 300
    description: Remove qualified accounts and clean-up their data


# Mail service configuration
spring.mail:
  host: smtp.gmail.com
  port: 587
  username: data.anonymisation
  #password: <Specified in secrets.properties>
  properties:
    smtp:
      auth: true
      starttls.enable: true
